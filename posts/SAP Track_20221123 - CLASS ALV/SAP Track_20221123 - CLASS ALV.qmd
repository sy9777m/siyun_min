---
title: "Co-op SAP Track 20221123 - CLASS ALV"
author: "Siyun Min"
date: "2022-11-23"
categories: [SSU, SAP]
---
# 20221123 - CLASS ALV

# ALV IN DOCKING CONTAINER

1. 화면

![Untitled](./Untitled.png)

1. 프로그램 생성

![Untitled](./Untitled%201.png)

![Untitled](./Untitled%202.png)

1. 객체 생성

![Untitled](./Untitled%203.png)

![Untitled](./Untitled%204.png)

CUSTOM CONTAINER에서는 스크린에서 생성한 CUSTOM CONTROL 연결하는 PARAMETER만 입력하지만, DOCKING CONTAINER 인스턴스 생성 시 프로그램 ID와 스크린 번호를 할당

1. 객체 생성 변수

![Untitled](./Untitled%205.png)

1. CONTAINER에 GRID 붙이기

![Untitled](./Untitled%206.png)

![Untitled](./Untitled%207.png)

1. GRID 변수 선언

![Untitled](./Untitled%208.png)

1. 중간 실행

![Untitled](./Untitled%209.png)

1. FIELD CATALOG 변수 선언

![Untitled](./Untitled%2010.png)

1. FIELD CATALOG 선언

![Untitled](./Untitled%2011.png)

1. 레이아웃 변수 선언

![Untitled](./Untitled%2012.png)

1. 레이아웃 셋팅

![Untitled](./Untitled%2013.png)

VARIANT로 레이아웃 속서을 지정하게 되면 레이아웃을 변경하고 저장할 수 있도록 (필드순서 변경, 필터링, 정렬 등)

1. SORT 변수 선언

![Untitled](./Untitled%2014.png)

1. SORT 셋팅

![Untitled](./Untitled%2015.png)

1. ALV 호출

![Untitled](./Untitled%2016.png)

![Untitled](./Untitled%2017.png)

I_SAVE에 A로 저장하면 ALV 레이아웃을 변경하여 사용자별로 저장 가능 (빈 값이면 프로그램 기본 셋팅)

![Untitled](./Untitled%2018.png)

1. DOCKING GRID 사이즈 제어

![Untitled](./Untitled%2019.png)

![Untitled](./Untitled%2020.png)

프로그램 내에서 사이즈 제어

![Untitled](./Untitled%2021.png)

# PRACTICE

![Untitled](./Untitled%2022.png)

![Untitled](./Untitled%2023.png)

![Untitled](./Untitled%2024.png)

## ZEDUR001_20221123

```abap
REPORT ZEDUR001_20221123 MESSAGE-ID ZMEDU15.

INCLUDE ZEDUR001_20221123_TOP.
INCLUDE ZEDUR001_20221123_SCR.
INCLUDE ZEDUR001_20221123_F01.
INCLUDE ZEDUR001_20221123_PBO.
INCLUDE ZEDUR001_20221123_PAI.

START-OF-SELECTION.
PERFORM SELECT_DATA.

IF GT_SFLIGHT[] IS NOT INITIAL.
  CALL SCREEN 100.
ELSE.
  MESSAGE I100.
  EXIT.
ENDIF.
```

## ZEDUR001_20221123_TOP

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221123_TOP
*&---------------------------------------------------------------------*

TABLES: SFLIGHT.

DATA: BEGIN OF GS_SFLIGHT.
  INCLUDE TYPE SFLIGHT.
DATA: END OF GS_SFLIGHT.
DATA: GT_SFLIGHT LIKE TABLE OF GS_SFLIGHT.

DATA: OK_CODE TYPE SY-UCOMM.

DATA: GC_DOCKING TYPE REF TO CL_GUI_DOCKING_CONTAINER.
DATA: GC_GRID TYPE REF TO CL_GUI_ALV_GRID.

DATA: GT_FCAT TYPE LVC_T_FCAT.
DATA: GS_FCAT TYPE LVC_S_FCAT.

DATA: GS_LAYO TYPE LVC_S_LAYO.
DATA: GS_VARIANT TYPE DISVARIANT.

DATA: GS_SORT TYPE LVC_S_SORT.
DATA: GT_SORT TYPE LVC_T_SORT.
```

## ZEDUR001_20221123_SCR

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221123_SCR
*&---------------------------------------------------------------------*

SELECT-OPTIONS: S_CARRID FOR SFLIGHT-CARRID.
```

## ZEDUR001_20221123_F01

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221123_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  SELECT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SELECT_DATA .
  SELECT * FROM SFLIGHT INTO CORRESPONDING FIELDS OF TABLE GT_SFLIGHT
    WHERE CARRID IN S_CARRID.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_FCAT .
  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'CARRID'.
  GS_FCAT-COLTEXT = '항공코드'.
  APPEND GS_FCAT TO GT_FCAT.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'CONNID'.
  GS_FCAT-COLTEXT = '편명'.
  APPEND GS_FCAT TO GT_FCAT.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'FLDATE'.
  GS_FCAT-COLTEXT = '날짜'.
  APPEND GS_FCAT TO GT_FCAT.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'PRICE'.
  GS_FCAT-COLTEXT = '가격'.
  APPEND GS_FCAT TO GT_FCAT.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_LAYO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_LAYO .

  CLEAR: GS_LAYO.
  GS_LAYO-ZEBRA = 'X'.
  GS_LAYO-CWIDTH_OPT = 'X'.

  CLEAR: GS_VARIANT.
  GS_VARIANT-REPORT = SY-REPID.
  GS_VARIANT-USERNAME = SY-UNAME.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_SORT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_SORT .

  CLEAR: GS_SORT.
  GS_SORT-FIELDNAME = 'CARRID'.
  GS_SORT-UP = 'X'.
  APPEND GS_SORT TO GT_SORT.

ENDFORM.
```

## ZEDUR001_20221123_PBO

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221123_PBO
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_0100 OUTPUT.
  SET PF-STATUS 'STATUS100'.
  SET TITLEBAR 'T100'.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  ALV_DISPLAY_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE ALV_DISPLAY_0100 OUTPUT.

  PERFORM SET_FCAT.
  PERFORM SET_LAYO.
  PERFORM SET_SORT.

  CREATE OBJECT GC_DOCKING
    EXPORTING
*      PARENT                      =
      REPID                       = SY-REPID
      DYNNR                       = SY-DYNNR
*      SIDE                        = DOCK_AT_LEFT
      EXTENSION                   = 1000
*      STYLE                       =
*      LIFETIME                    = lifetime_default
*      CAPTION                     =
*      METRIC                      = 0
*      RATIO                       =
*      NO_AUTODEF_PROGID_DYNNR     =
*      NAME                        =
*    EXCEPTIONS
*      CNTL_ERROR                  = 1
*      CNTL_SYSTEM_ERROR           = 2
*      CREATE_ERROR                = 3
*      LIFETIME_ERROR              = 4
*      LIFETIME_DYNPRO_DYNPRO_LINK = 5
*      others                      = 6
      .
  IF SY-SUBRC <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  CREATE OBJECT GC_GRID
    EXPORTING
*      I_SHELLSTYLE      = 0
*      I_LIFETIME        =
      I_PARENT          = GC_DOCKING
*      I_APPL_EVENTS     = space
*      I_PARENTDBG       =
*      I_APPLOGPARENT    =
*      I_GRAPHICSPARENT  =
*      I_NAME            =
*      I_FCAT_COMPLETE   = SPACE
*    EXCEPTIONS
*      ERROR_CNTL_CREATE = 1
*      ERROR_CNTL_INIT   = 2
*      ERROR_CNTL_LINK   = 3
*      ERROR_DP_CREATE   = 4
*      others            = 5
      .
  IF SY-SUBRC <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

CALL METHOD GC_GRID->SET_TABLE_FOR_FIRST_DISPLAY
  EXPORTING
*    I_BUFFER_ACTIVE               =
*    I_BYPASSING_BUFFER            =
*    I_CONSISTENCY_CHECK           =
*    I_STRUCTURE_NAME              =
    IS_VARIANT                    = GS_VARIANT
    I_SAVE                        = 'A'
*    I_DEFAULT                     = 'X'
    IS_LAYOUT                     = GS_LAYO
*    IS_PRINT                      =
*    IT_SPECIAL_GROUPS             =
*    IT_TOOLBAR_EXCLUDING          =
*    IT_HYPERLINK                  =
*    IT_ALV_GRAPHICS               =
*    IT_EXCEPT_QINFO               =
*    IR_SALV_ADAPTER               =
  CHANGING
    IT_OUTTAB                     = GT_SFLIGHT
    IT_FIELDCATALOG               = GT_FCAT
*    IT_SORT                       =
*    IT_FILTER                     =
*  EXCEPTIONS
*    INVALID_PARAMETER_COMBINATION = 1
*    PROGRAM_ERROR                 = 2
*    TOO_MANY_LINES                = 3
*    others                        = 4
        .
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.

ENDMODULE.
```

## ZEDUR001_20221123_PAI

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221123_PAI
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  USER_EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_EXIT INPUT.
  CASE OK_CODE.
    WHEN 'BACK' OR 'EXIT'.
      LEAVE TO SCREEN 0.
    WHEN 'EXIT'.
      LEAVE PROGRAM.
  ENDCASE.
ENDMODULE.
```

## SCREEN100

```abap
PROCESS BEFORE OUTPUT.
  MODULE STATUS_0100.
  MODULE ALV_DISPLAY_0100.
*
PROCESS AFTER INPUT.
  MODULE USER_EXIT AT EXIT-COMMAND.
* MODULE USER_COMMAND_0100.
```

# PRACTICE 2

## ZEDUR001_20221123_2

```abap
*&---------------------------------------------------------------------*
*& Report ZEDUR001_20221123_2
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZEDUR001_20221123_2 MESSAGE-ID ZMEDU15.

INCLUDE ZEDUR001_20221123_2_TOP.
INCLUDE ZEDUR001_20221123_2_SCR.
INCLUDE ZEDUR001_20221123_2_F01.
INCLUDE ZEDUR001_20221123_2_PBO.
INCLUDE ZEDUR001_20221123_2_PAI.

START-OF-SELECTION.
PERFORM SELECT_DATA.

IF GT_SFLIGHT[] IS NOT INITIAL.
  CALL SCREEN 100.
ELSE.
  MESSAGE I100.
  EXIT.
ENDIF.
```

## ZEDUR001_20221123_2_TOP

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221123_2_TOP
*&---------------------------------------------------------------------*

TABLES: SFLIGHT.

DATA: BEGIN OF GS_SFLIGHT.
  INCLUDE TYPE SFLIGHT.
DATA: END OF GS_SFLIGHT.
DATA: GT_SFLIGHT LIKE TABLE OF GS_SFLIGHT.

DATA: OK_CODE TYPE SY-UCOMM.

DATA: GC_DOCKING TYPE REF TO CL_GUI_DOCKING_CONTAINER.
DATA: GC_GRID TYPE REF TO CL_GUI_ALV_GRID.

DATA: GT_FCAT TYPE LVC_T_FCAT.
DATA: GS_FCAT TYPE LVC_S_FCAT.

DATA: GS_LAYO TYPE LVC_S_LAYO.
DATA: GS_VARIANT TYPE DISVARIANT.

DATA: GS_SORT TYPE LVC_S_SORT.
DATA: GT_SORT TYPE LVC_T_SORT.
```

## ZEDUR001_20221123_2_SCR

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221123_2_SCR
*&---------------------------------------------------------------------*

SELECT-OPTIONS: S_CARRID FOR SFLIGHT-CARRID.
```

## ZEDUR001_20221123_2_F01

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221123_2_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  CALL_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CALL_ALV .
CREATE OBJECT GC_DOCKING
  EXPORTING
*    PARENT                      =
    REPID                       = SY-REPID
    DYNNR                       = SY-DYNNR
*    SIDE                        = DOCK_AT_LEFT
    EXTENSION                   = 500
*    STYLE                       =
*    LIFETIME                    = lifetime_default
*    CAPTION                     =
*    METRIC                      = 0
*    RATIO                       =
*    NO_AUTODEF_PROGID_DYNNR     =
*    NAME                        =
*  EXCEPTIONS
*    CNTL_ERROR                  = 1
*    CNTL_SYSTEM_ERROR           = 2
*    CREATE_ERROR                = 3
*    LIFETIME_ERROR              = 4
*    LIFETIME_DYNPRO_DYNPRO_LINK = 5
*    others                      = 6
    .
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

CREATE OBJECT GC_GRID
  EXPORTING
*    I_SHELLSTYLE      = 0
*    I_LIFETIME        =
    I_PARENT          = GC_DOCKING
*    I_APPL_EVENTS     = space
*    I_PARENTDBG       =
*    I_APPLOGPARENT    =
*    I_GRAPHICSPARENT  =
*    I_NAME            =
*    I_FCAT_COMPLETE   = SPACE
*  EXCEPTIONS
*    ERROR_CNTL_CREATE = 1
*    ERROR_CNTL_INIT   = 2
*    ERROR_CNTL_LINK   = 3
*    ERROR_DP_CREATE   = 4
*    others            = 5
    .
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

CALL METHOD GC_GRID->SET_TABLE_FOR_FIRST_DISPLAY
  EXPORTING
*    I_BUFFER_ACTIVE               =
*    I_BYPASSING_BUFFER            =
*    I_CONSISTENCY_CHECK           =
*    I_STRUCTURE_NAME              =
    IS_VARIANT                    = GS_VARIANT
    I_SAVE                        = 'A'
*    I_DEFAULT                     = 'X'
    IS_LAYOUT                     = GS_LAYO
*    IS_PRINT                      =
*    IT_SPECIAL_GROUPS             =
*    IT_TOOLBAR_EXCLUDING          =
*    IT_HYPERLINK                  =
*    IT_ALV_GRAPHICS               =
*    IT_EXCEPT_QINFO               =
*    IR_SALV_ADAPTER               =
  CHANGING
    IT_OUTTAB                     = GT_SFLIGHT
    IT_FIELDCATALOG               = GT_FCAT
    IT_SORT                       = GT_SORT
*    IT_FILTER                     =
*  EXCEPTIONS
*    INVALID_PARAMETER_COMBINATION = 1
*    PROGRAM_ERROR                 = 2
*    TOO_MANY_LINES                = 3
*    others                        = 4
        .
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_FCAT .

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'CARRID'.
  GS_FCAT-COLTEXT = '항공코드'.
  APPEND GS_FCAT TO GT_FCAT.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'CONNID'.
  GS_FCAT-COLTEXT = '편명'.
  APPEND GS_FCAT TO GT_FCAT.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'FLDATE'.
  GS_FCAT-COLTEXT = '날짜'.
  APPEND GS_FCAT TO GT_FCAT.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'PRICE'.
  GS_FCAT-COLTEXT = '가격'.
  APPEND GS_FCAT TO GT_FCAT.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_LAYO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_LAYO .

  CLEAR: GS_LAYO.
  GS_LAYO-ZEBRA = 'X'.
  GS_LAYO-CWIDTH_OPT = 'X'.

  CLEAR: GS_VARIANT.
  GS_VARIANT-REPORT = SY-REPID.
  GS_VARIANT-USERNAME = SY-UNAME.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_SORT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_SORT .

  CLEAR: GS_SORT.
  GS_SORT-FIELDNAME = 'PRICE'.
  GS_SORT-UP = 'X'.
  APPEND GS_SORT TO GT_SORT.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SELECT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SELECT_DATA .
  SELECT * FROM SFLIGHT INTO CORRESPONDING FIELDS OF TABLE GT_SFLIGHT
    WHERE CARRID IN S_CARRID.
ENDFORM.
```

## ZEDUR001_20221123_2_PBO

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221123_2_PBO
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_0100 OUTPUT.
  SET PF-STATUS 'STATUS100'.
  SET TITLEBAR 'T100'.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  ALV_DISPLAY_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE ALV_DISPLAY_0100 OUTPUT.
  PERFORM SET_FCAT.
  PERFORM SET_LAYO.
  PERFORM SET_SORT.
  PERFORM CALL_ALV.
ENDMODULE.
```

## ZEDUR001_20221123_2_PAI

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221123_2_PAI
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  USER_EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_EXIT INPUT.
  CASE OK_CODE.
    WHEN 'BACK' OR 'CANC'.
      LEAVE TO SCREEN 0.
    WHEN 'EXIT'.
      LEAVE PROGRAM.
  ENDCASE.
ENDMODULE.
```

## SCREEN100

```abap
PROCESS BEFORE OUTPUT.
  MODULE STATUS_0100.
  MODULE ALV_DISPLAY_0100.
*
PROCESS AFTER INPUT.
  MODULE USER_EXIT AT EXIT-COMMAND.
* MODULE USER_COMMAND_0100.
```