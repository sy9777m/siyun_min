---
title: "Digital System Circuits Week 13"
author: "Siyun Min"
date: "2021-11-30"
categories: [SSU]
---
# Digital System Circuits week 13

## Basic register

![image-20211130082001213](./image-20211130082001213.png)

## Example using registers: temperature display

![image-20211130082252959](./image-20211130082252959.png)

![image-20211130082306677](./image-20211130082306677.png)

## Finite-state machines (FSMs) and controllers

![image-20211130082634417](./image-20211130082634417.png)

## Need a better way to design sequential circuits

![image-20211130083251074](./image-20211130083251074.png)

## Captureing sequential circuit behavior as FSM

![image-20211130083403163](./image-20211130083403163.png)

## FSM example: three cycle high system

![image-20211130083827060](./image-20211130083827060.png)

## Three-cycles high system with button input

![image-20211130084539154](./image-20211130084539154.png)

## FSM simplification: rising clock edges implicit

![image-20211130084556792](./image-20211130084556792.png)

## Stochastic process

![image-20211130084613846](./image-20211130084613846.png)

## Verilog for finite state machines

![image-20211130085517868](./image-20211130085517868.png)

## Finite state machine

![image-20211130085529349](./image-20211130085529349.png)

## Mealy and Moore machines

![image-20211130085746028](./image-20211130085746028.png)

## Constructing state machines in Verilog

![image-20211130085805136](./image-20211130085805136.png)

## State register

![image-20211130090030853](./image-20211130090030853.png)

![image-20211130090118533](./image-20211130090118533.png)

## Next state function

![image-20211130090216696](./image-20211130090216696.png)

## always @(*) block

![image-20211130090341262](./image-20211130090341262.png)

## Next state function

![image-20211130090353718](./image-20211130090353718.png)

## Output function

![image-20211130090952730](./image-20211130090952730.png)
