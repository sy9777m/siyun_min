---
title: "Co-op SAP Track 20221124 - SPLITTER CONTAINER"
author: "Siyun Min"
date: "2022-11-24"
categories: [SSU, SAP]
---
# 20221124 - SPLITTER CONTAINER

# ALV IN SPLITTER CONTAINER

1. 화면

![Untitled](./Untitled.png)

1. 프로그램 생성

![Untitled](./Untitled%201.png)

![Untitled](./Untitled%202.png)

1. DOCKING 객체 생성

![Untitled](./Untitled%203.png)

![Untitled](./Untitled%204.png)

![Untitled](./Untitled%205.png)

1. DOCKING 객체 생성 변수

![Untitled](./Untitled%206.png)

1. SPLITTER 객체 생성

![Untitled](./Untitled%207.png)

![Untitled](./Untitled%208.png)

1. SPLITTER 객체 생성 변수

![Untitled](./Untitled%209.png)

1. METHOD 호출 - GET_CONTAINER

![Untitled](./Untitled%2010.png)

![Untitled](./Untitled%2011.png)

1. GET_CONTAINER 생성 변수

![Untitled](./Untitled%2012.png)

1. CONTAINER에 GRID 붙이기

![Untitled](./Untitled%2013.png)

![Untitled](./Untitled%2014.png)

![Untitled](./Untitled%2015.png)

1. GRID 변수 선언

![Untitled](./Untitled%2016.png)

1. 중간 실행

![Untitled](./Untitled%2017.png)

1. 필드 카탈로그 변수 선언

![Untitled](./Untitled%2018.png)

![Untitled](./Untitled%2019.png)

1. 레이아웃 변수 선언

![Untitled](./Untitled%2020.png)

1. 레이아웃 셋팅

![Untitled](./Untitled%2021.png)

1. SORT 변수 선언

![Untitled](./Untitled%2022.png)

1. SORT 세팅

![Untitled](./Untitled%2023.png)

1. ALV 호출

![Untitled](./Untitled%2024.png)

![Untitled](./Untitled%2025.png)

![Untitled](./Untitled%2026.png)

![Untitled](./Untitled%2027.png)

1. 결과

![Untitled](./Untitled%2028.png)

---

# PRACTICE 1

## ZEDUR001_20221124

```abap
*&---------------------------------------------------------------------*
*& Report ZEDUR001_20221124
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZEDUR001_20221124 MESSAGE-ID ZMEDU15.

INCLUDE ZEDUR001_20221124_TOP.
INCLUDE ZEDUR001_20221124_SCR.
INCLUDE ZEDUR001_20221124_F01.
INCLUDE ZEDUR001_20221124_PBO.
INCLUDE ZEDUR001_20221124_PAI.

START-OF-SELECTION.
PERFORM SELECT_DATA.

IF GT_SFLIGHT[] IS NOT INITIAL.
  IF GT_SCARR[] IS NOT INITIAL.
    CALL SCREEN 100.
  ELSE.
    MESSAGE I100.
    EXIT.
  ENDIF.
ELSE.
  MESSAGE I100.
  EXIT.
ENDIF.
```

## ZEDUR001_20221124_TOP

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221124_TOP
*&---------------------------------------------------------------------*

TABLES: SFLIGHT, SCARR.

DATA: BEGIN OF GS_SFLIGHT.
  INCLUDE TYPE SFLIGHT.
DATA: END OF GS_SFLIGHT.
DATA: GT_SFLIGHT LIKE TABLE OF GS_SFLIGHT.

DATA: BEGIN OF GS_SCARR.
  INCLUDE TYPE SCARR.
DATA: END OF GS_SCARR.
DATA: GT_SCARR LIKE TABLE OF GS_SCARR.

DATA: OK_CODE TYPE SY-UCOMM.

DATA: GC_DOCKING TYPE REF TO CL_GUI_DOCKING_CONTAINER.
DATA: GC_SPLITTER TYPE REF TO CL_GUI_SPLITTER_CONTAINER.

DATA: GC_CONTAINER1 TYPE REF TO CL_GUI_CONTAINER.
DATA: GC_CONTAINER2 TYPE REF TO CL_GUI_CONTAINER.

DATA: GC_GRID1 TYPE REF TO CL_GUI_ALV_GRID.
DATA: GC_GRID2 TYPE REF TO CL_GUI_ALV_GRID.

DATA: GS_FCAT TYPE LVC_S_FCAT.
DATA: GT_FCAT1 TYPE LVC_T_FCAT.
DATA: GT_FCAT2 TYPE LVC_T_FCAT.

DATA: GS_LAYO TYPE LVC_S_LAYO.
DATA: GS_VARIANT TYPE DISVARIANT.

DATA: GS_SORT TYPE LVC_S_SORT.
DATA: GT_SORT1 TYPE LVC_T_SORT.
DATA: GT_sORT2 TYPE LVC_T_SORT.
```

## ZEDUR001_20221124_SCR

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221124_SCR
*&---------------------------------------------------------------------*
```

## ZEDUR001_20221124_F01

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221124_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  SELECT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SELECT_DATA .
  SELECT * FROM SFLIGHT INTO CORRESPONDING FIELDS OF TABLE GT_SFLIGHT.

  SELECT * FROM SCARR INTO CORRESPONDING FIELDS OF TABLE GT_SCARR.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_OBJECT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CREATE_OBJECT .
CREATE OBJECT GC_DOCKING
  EXPORTING
*    PARENT                      =
    REPID                       = SY-REPID
    DYNNR                       = SY-DYNNR
*    SIDE                        = DOCK_AT_LEFT
    EXTENSION                   = 5000
*    STYLE                       =
*    LIFETIME                    = lifetime_default
*    CAPTION                     =
*    METRIC                      = 0
*    RATIO                       =
*    NO_AUTODEF_PROGID_DYNNR     =
*    NAME                        =
*  EXCEPTIONS
*    CNTL_ERROR                  = 1
*    CNTL_SYSTEM_ERROR           = 2
*    CREATE_ERROR                = 3
*    LIFETIME_ERROR              = 4
*    LIFETIME_DYNPRO_DYNPRO_LINK = 5
*    others                      = 6
    .
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

CREATE OBJECT GC_SPLITTER
  EXPORTING
*    LINK_DYNNR        =
*    LINK_REPID        =
*    SHELLSTYLE        =
*    LEFT              =
*    TOP               =
*    WIDTH             =
*    HEIGHT            =
*    METRIC            = cntl_metric_dynpro
*    ALIGN             = 15
    PARENT            = GC_DOCKING
    ROWS              = 2
    COLUMNS           = 1
*    NO_AUTODEF_PROGID_DYNNR =
*    NAME              =
*  EXCEPTIONS
*    CNTL_ERROR        = 1
*    CNTL_SYSTEM_ERROR = 2
*    others            = 3
    .
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

CALL METHOD GC_SPLITTER->GET_CONTAINER
  EXPORTING
    ROW       = 1
    COLUMN    = 1
  RECEIVING
    CONTAINER = GC_CONTAINER1.

CALL METHOD GC_SPLITTER->GET_CONTAINER
  EXPORTING
    ROW       = 2
    COLUMN    = 1
  RECEIVING
    CONTAINER = GC_CONTAINER2.

CREATE OBJECT GC_GRID1
  EXPORTING
*    I_SHELLSTYLE      = 0
*    I_LIFETIME        =
    I_PARENT          = GC_CONTAINER1
*    I_APPL_EVENTS     = space
*    I_PARENTDBG       =
*    I_APPLOGPARENT    =
*    I_GRAPHICSPARENT  =
*    I_NAME            =
*    I_FCAT_COMPLETE   = SPACE
*  EXCEPTIONS
*    ERROR_CNTL_CREATE = 1
*    ERROR_CNTL_INIT   = 2
*    ERROR_CNTL_LINK   = 3
*    ERROR_DP_CREATE   = 4
*    others            = 5
    .
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

CREATE OBJECT GC_GRID2
  EXPORTING
*    I_SHELLSTYLE      = 0
*    I_LIFETIME        =
    I_PARENT          = GC_CONTAINER2
*    I_APPL_EVENTS     = space
*    I_PARENTDBG       =
*    I_APPLOGPARENT    =
*    I_GRAPHICSPARENT  =
*    I_NAME            =
*    I_FCAT_COMPLETE   = SPACE
*  EXCEPTIONS
*    ERROR_CNTL_CREATE = 1
*    ERROR_CNTL_INIT   = 2
*    ERROR_CNTL_LINK   = 3
*    ERROR_DP_CREATE   = 4
*    others            = 5
    .
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_FCAT .

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'CARRID'.
  GS_FCAT-COLTEXT = '항공코드'.
  APPEND GS_FCAT TO GT_FCAT1.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'CONNID'.
  GS_FCAT-COLTEXT = '편명'.
  APPEND GS_FCAT TO GT_FCAT1.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'FLDATE'.
  GS_FCAT-COLTEXT = '날짜'.
  APPEND GS_FCAT TO GT_FCAT1.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'PRICE'.
  GS_FCAT-COLTEXT = '가격'.
  GS_FCAT-DO_SUM = 'X'.
  APPEND GS_FCAT TO GT_FCAT1.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'CARRID'.
  GS_FCAT-COLTEXT = '항공코드'.
  APPEND GS_FCAT TO GT_FCAT2.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'CARRIDNAME'.
  GS_FCAT-COLTEXT = '항공코드명'.
  APPEND GS_FCAT TO GT_FCAT2.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'CURRCODE'.
  GS_FCAT-COLTEXT = '통화코드'.
  APPEND GS_FCAT TO GT_FCAT2.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'URL'.
  GS_FCAT-COLTEXT = 'URL'.
  APPEND GS_FCAT TO GT_FCAT2.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_LAYO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_LAYO .

  CLEAR: GS_LAYO.
  GS_LAYO-ZEBRA = 'X'.
  GS_LAYO-CWIDTH_OPT = 'X'.

  CLEAR: GS_VARIANT.
  GS_VARIANT-REPORT = SY-REPID.
  GS_VARIANT-USERNAME = SY-UNAME.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_SORT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_SORT .

  CLEAR:GS_SORT.
  GS_SORT-FIELDNAME = 'CARRID'.
  GS_SORT-SUBTOT = 'X'.
  APPEND GS_SORT TO GT_SORT1.

  CLEAR:GS_SORT.
  GS_SORT-FIELDNAME = 'CARRID'.
  GS_SORT-UP = 'X'.
  APPEND GS_SORT TO GT_SORT2.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CALL_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CALL_ALV .
CALL METHOD GC_GRID1->SET_TABLE_FOR_FIRST_DISPLAY
  EXPORTING
*    I_BUFFER_ACTIVE               =
*    I_BYPASSING_BUFFER            =
*    I_CONSISTENCY_CHECK           =
*    I_STRUCTURE_NAME              =
    IS_VARIANT                    = GS_VARIANT
    I_SAVE                        = 'A'
*    I_DEFAULT                     = 'X'
    IS_LAYOUT                     = GS_LAYO
*    IS_PRINT                      =
*    IT_SPECIAL_GROUPS             =
*    IT_TOOLBAR_EXCLUDING          =
*    IT_HYPERLINK                  =
*    IT_ALV_GRAPHICS               =
*    IT_EXCEPT_QINFO               =
*    IR_SALV_ADAPTER               =
  CHANGING
    IT_OUTTAB                     = GT_SFLIGHT
    IT_FIELDCATALOG               = GT_FCAT1
    IT_SORT                       = GT_SORT1
*    IT_FILTER                     =
*  EXCEPTIONS
*    INVALID_PARAMETER_COMBINATION = 1
*    PROGRAM_ERROR                 = 2
*    TOO_MANY_LINES                = 3
*    others                        = 4
        .
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.

CALL METHOD GC_GRID2->SET_TABLE_FOR_FIRST_DISPLAY
  EXPORTING
*    I_BUFFER_ACTIVE               =
*    I_BYPASSING_BUFFER            =
*    I_CONSISTENCY_CHECK           =
*    I_STRUCTURE_NAME              =
    IS_VARIANT                    = GS_VARIANT
    I_SAVE                        = 'A'
*    I_DEFAULT                     = 'X'
    IS_LAYOUT                     = GS_LAYO
*    IS_PRINT                      =
*    IT_SPECIAL_GROUPS             =
*    IT_TOOLBAR_EXCLUDING          =
*    IT_HYPERLINK                  =
*    IT_ALV_GRAPHICS               =
*    IT_EXCEPT_QINFO               =
*    IR_SALV_ADAPTER               =
  CHANGING
    IT_OUTTAB                     = GT_SCARR
    IT_FIELDCATALOG               = GT_FCAT2
    IT_SORT                       = GT_SORT2
*    IT_FILTER                     =
*  EXCEPTIONS
*    INVALID_PARAMETER_COMBINATION = 1
*    PROGRAM_ERROR                 = 2
*    TOO_MANY_LINES                = 3
*    others                        = 4
        .
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.

ENDFORM.
```

## ZEDUR001_20221124_PBO

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221124_PBO
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_0100 OUTPUT.
  SET PF-STATUS 'STATUS100'.
  SET TITLEBAR 'T100'.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  ALV_DISPLAY_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE ALV_DISPLAY_0100 OUTPUT.
  PERFORM CREATE_OBJECT.
  PERFORM SET_FCAT.
  PERFORM SET_LAYO.
  PERFORM SET_SORT.
  PERFORM CALL_ALV.
ENDMODULE.
```

## ZEDUR001_20221124_PAI

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221124_PAI
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  USER_EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_EXIT INPUT.
  CASE OK_CODE.
    WHEN 'BACK' OR 'CANC'.
      LEAVE TO SCREEN 0.
    WHEN 'EXIT'.
      LEAVE PROGRAM.
  ENDCASE.
ENDMODULE.
```

## ZEDUR001_20221124 - SCREEN 100

```abap
PROCESS BEFORE OUTPUT.
  MODULE STATUS_0100.
  MODULE ALV_DISPLAY_0100.
*
PROCESS AFTER INPUT.
  MODULE USER_EXIT AT EXIT-COMMAND.
* MODULE USER_COMMAND_0100.
```