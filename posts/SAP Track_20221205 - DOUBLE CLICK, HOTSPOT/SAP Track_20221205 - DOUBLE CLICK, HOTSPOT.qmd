---
title: "Co-op SAP Track 20221205 - DOUBLE DLICK, HOTSPOT"
author: "Siyun Min"
date: "2022-12-05"
categories: [SSU, SAP]
---
# 20221205 - DOUBLE CLICK, HOTSPOT

# DOUBLE CLICK EVENT

![Untitled](./Untitled.png)

1. DOUBLE CLICK EVENT 확인

![Untitled](./Untitled%201.png)

1. DOUBLE CLICK EVENT PARAMETER 확인

![Untitled](./Untitled%202.png)

1. CLASS 작성

![Untitled](./Untitled%203.png)

1. PERFORM 생성

![Untitled](./Untitled%204.png)

1. COLUMN 계산을 위한 변수선언

![Untitled](./Untitled%205.png)

1. COLUMN 계산을 위한 FIELD CATALOG 선언

![Untitled](./Untitled%206.png)

1. COLUMN 계산

![Untitled](./Untitled%207.png)

1. COLUMN 제어

![Untitled](./Untitled%208.png)

1. METHOD 구현

![Untitled](./Untitled%209.png)

1. HANDLER 정의

![Untitled](./Untitled%2010.png)

1. 실행

![Untitled](./Untitled%2011.png)

1. ROW만 정의

![Untitled](./Untitled%2012.png)

![Untitled](./Untitled%2013.png)

```abap
*&---------------------------------------------------------------------*
*& Report ZEDUR001_20221205
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZEDUR001_20221205 MESSAGE-ID ZMEDU15.

INCLUDE ZEDUR001_20221205_CLS.
INCLUDE ZEDUR001_20221205_TOP.
INCLUDE ZEDUR001_20221205_SCR.
INCLUDE ZEDUR001_20221205_F01.
INCLUDE ZEDUR001_20221205_PBO.
INCLUDE ZEDUR001_20221205_PAI.

START-OF-SELECTION.
PERFORM SELECT_DATA.
PERFORM MODIFY_DATA.

IF GT_ZSTU_15[] IS NOT INITIAL.
  CALL SCREEN 100.
ELSE.
  MESSAGE I000.
  EXIT.
ENDIF.
```

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221205_TOP
*&---------------------------------------------------------------------*

DATA: BEGIN OF GS_ZSTU_15.
  DATA: NUM TYPE I.
  INCLUDE TYPE ZSTU_15.
DATA: END OF GS_ZSTU_15.
DATA: GT_ZSTU_15 LIKE TABLE OF GS_ZSTU_15.

DATA: OK_CODE LIKE SY-UCOMM.

DATA: GC_DOCKING TYPE REF TO CL_GUI_DOCKING_CONTAINER.
DATA: GC_GRID TYPE REF TO CL_GUI_ALV_GRID.

DATA: GT_FCAT TYPE LVC_T_FCAT.
DATA: GS_FCAT TYPE LVC_S_FCAT.

DATA: GS_LAYO TYPE LVC_S_LAYO.
DATA: GS_VARIANT TYPE DISVARIANT.

DATA: GS_SORT TYPE LVC_S_SORT.
DATA: GT_SORT TYPE LVC_T_SORT.

DATA: GO_EVENT TYPE REF TO EVENT.
```

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221205_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  SELECT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SELECT_DATA .
  SELECT * FROM ZSTU_15 INTO CORRESPONDING FIELDS OF TABLE GT_ZSTU_15.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_OBJECT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CREATE_OBJECT .
CREATE OBJECT GC_DOCKING
  EXPORTING
*    PARENT                      =
    REPID                       = SY-REPID
    DYNNR                       = SY-DYNNR
*    SIDE                        = DOCK_AT_LEFT
    EXTENSION                   = 5000
*    STYLE                       =
*    LIFETIME                    = lifetime_default
*    CAPTION                     =
*    METRIC                      = 0
*    RATIO                       =
*    NO_AUTODEF_PROGID_DYNNR     =
*    NAME                        =
*  EXCEPTIONS
*    CNTL_ERROR                  = 1
*    CNTL_SYSTEM_ERROR           = 2
*    CREATE_ERROR                = 3
*    LIFETIME_ERROR              = 4
*    LIFETIME_DYNPRO_DYNPRO_LINK = 5
*    others                      = 6
    .
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

CREATE OBJECT GC_GRID
  EXPORTING
*    I_SHELLSTYLE      = 0
*    I_LIFETIME        =
    I_PARENT          = GC_DOCKING
*    I_APPL_EVENTS     = space
*    I_PARENTDBG       =
*    I_APPLOGPARENT    =
*    I_GRAPHICSPARENT  =
*    I_NAME            =
*    I_FCAT_COMPLETE   = SPACE
*  EXCEPTIONS
*    ERROR_CNTL_CREATE = 1
*    ERROR_CNTL_INIT   = 2
*    ERROR_CNTL_LINK   = 3
*    ERROR_DP_CREATE   = 4
*    others            = 5
    .
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_FCAT .
  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'NUM'.
  GS_FCAT-COLTEXT = '숫자'.
  APPEND GS_FCAT TO GT_FCAT.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'ZCODE'.
  GS_FCAT-COLTEXT = '학생코드'.
  APPEND GS_FCAT TO GT_FCAT.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'ZKNAME'.
  GS_FCAT-COLTEXT = '이름'.
  APPEND GS_FCAT TO GT_FCAT.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'ZENAME'.
  GS_FCAT-COLTEXT = '영문이름'.
  APPEND GS_FCAT TO GT_FCAT.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'ZGUBUN'.
  GS_FCAT-COLTEXT = '성별'.
  APPEND GS_FCAT TO GT_FCAT.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'ZTEL'.
  GS_FCAT-COLTEXT = '전화번호'.
  APPEND GS_FCAT TO GT_FCAT.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_LAYO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_LAYO .

  CLEAR: GS_LAYO.
  GS_LAYO-ZEBRA = 'X'.
  GS_LAYO-CWIDTH_OPT = 'X'.

  CLEAR: GS_VARIANT.
  GS_VARIANT-REPORT = 'SY-REPID'.
  GS_VARIANT-USERNAME = 'SY-UNAME'.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_SORT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_SORT .

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ALV_EVENT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM ALV_EVENT .

  CREATE OBJECT GO_EVENT.

  SET HANDLER GO_EVENT->HANDLE_DOUBLE_CLICK FOR GC_GRID.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CALL_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CALL_ALV .
CALL METHOD GC_GRID->SET_TABLE_FOR_FIRST_DISPLAY
  EXPORTING
*    I_BUFFER_ACTIVE               =
*    I_BYPASSING_BUFFER            =
*    I_CONSISTENCY_CHECK           =
*    I_STRUCTURE_NAME              =
    IS_VARIANT                    = GS_VARIANT
    I_SAVE                        = 'X'
*    I_DEFAULT                     = 'X'
    IS_LAYOUT                     = GS_LAYO
*    IS_PRINT                      =
*    IT_SPECIAL_GROUPS             =
*    IT_TOOLBAR_EXCLUDING          =
*    IT_HYPERLINK                  =
*    IT_ALV_GRAPHICS               =
*    IT_EXCEPT_QINFO               =
*    IR_SALV_ADAPTER               =
  CHANGING
    IT_OUTTAB                     = GT_ZSTU_15
    IT_FIELDCATALOG               = GT_FCAT
    IT_SORT                       = GT_SORT
*    IT_FILTER                     =
*  EXCEPTIONS
*    INVALID_PARAMETER_COMBINATION = 1
*    PROGRAM_ERROR                 = 2
*    TOO_MANY_LINES                = 3
*    others                        = 4
        .
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ALV_REFRESH
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM ALV_REFRESH .

  DATA: LS_STABLE TYPE LVC_S_STBL.

  LS_STABLE-ROW = 'X'.
  LS_STABLE-COL = 'X'.

  CALL METHOD GC_GRID->REFRESH_TABLE_DISPLAY
    EXPORTING
      IS_STABLE      = LS_STABLE
*      I_SOFT_REFRESH =
*    EXCEPTIONS
*      FINISHED       = 1
*      others         = 2
          .
  IF SY-SUBRC <> 0.
*   Implement suitable error handling here
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ALV_HANDLE_DOUBLE_CLICK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_E_ROW  text
*      -->P_E_COLUMN  text
*      -->P_ES_ROW_NO  text
*----------------------------------------------------------------------*
FORM ALV_HANDLE_DOUBLE_CLICK  USING    P_E_ROW TYPE LVC_S_ROW
                                       P_E_COLUMN TYPE LVC_S_COL
                                       P_ES_ROW_NO TYPE LVC_S_ROID.

  DATA: LV_CHAR(2).
  DATA: LV_TEXT(20).

  CASE P_E_COLUMN-FIELDNAME.
    WHEN 'NUM'.
      CLEAR GS_ZSTU_15.
      READ TABLE GT_ZSTU_15 INTO GS_ZSTU_15 INDEX P_ES_ROW_NO-ROW_ID.
      IF SY-SUBRC = 0.
        LV_CHAR = GS_ZSTU_15-NUM.
        CONCATENATE LV_CHAR '번째 데이터입니다' INTO LV_TEXT.
        MESSAGE LV_TEXT TYPE 'I'.
      ENDIF.
  ENDCASE.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MODIFY_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM MODIFY_DATA .
  DATA: LV_TABIX TYPE SY-TABIX.

  LOOP AT GT_ZSTU_15 INTO GS_ZSTU_15.
    LV_TABIX = SY-TABIX.
    GS_ZSTU_15-NUM = LV_TABIX.

    MODIFY GT_ZSTU_15 FROM GS_ZSTU_15.
    CLEAR: GS_ZSTU_15.
  ENDLOOP.

ENDFORM.
```

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221205_PBO
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_0100 OUTPUT.
  SET PF-STATUS 'STATUS100'.
  SET TITLEBAR 'T100'.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  ALV_DISPLAY_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE ALV_DISPLAY_0100 OUTPUT.
  IF GC_DOCKING IS INITIAL.
    PERFORM CREATE_OBJECT.
    PERFORM SET_FCAT.
    PERFORM SET_LAYO.
    PERFORM SET_SORT.
    PERFORM ALV_EVENT.
    PERFORM CALL_ALV.
  ELSE.
    PERFORM ALV_REFRESH.
  ENDIF.

ENDMODULE.
```

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221205_PAI
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  USER_EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_EXIT INPUT.
  CASE OK_CODE.
    WHEN 'EXIT'.
      LEAVE PROGRAM.
    WHEN 'BACK' OR 'CANC'.
      LEAVE TO SCREEN 0.
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0100 INPUT.

ENDMODULE.
```

```abap
PROCESS BEFORE OUTPUT.
  MODULE STATUS_0100.
  MODULE ALV_DISPLAY_0100.
*
PROCESS AFTER INPUT.
  MODULE USER_EXIT AT EXIT-COMMAND.
  MODULE USER_COMMAND_0100.
```

![Untitled](./Untitled%2014.png)

# HOTSPOT EVENT

![Untitled](./Untitled%2015.png)

1. HOTSPOT EVENT 확인

![Untitled](./Untitled%2016.png)

1. HOTSPOT EVENT PARAMETER 확인

![Untitled](./Untitled%2017.png)

1. CLASS 작성

![Untitled](./Untitled%2018.png)

1. PERFORM 작성

![Untitled](./Untitled%2019.png)

1. HANDLER 정의

![Untitled](./Untitled%2020.png)

1. HOTSPOT FIELD CATALOG 정의

![Untitled](./Untitled%2021.png)

1. 실행

![Untitled](./Untitled%2022.png)