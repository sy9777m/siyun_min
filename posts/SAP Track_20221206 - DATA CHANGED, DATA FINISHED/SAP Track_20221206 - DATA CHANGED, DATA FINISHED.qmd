---
title: "Co-op SAP Track 20221206 - DATA CHANGED, DATA FINISHED"
author: "Siyun Min"
date: "2022-12-06"
categories: [SSU, SAP]
---
# 20221206 - DATA CHANGED, DATA FINISHED

# DATA CHANGED

1. SCREEN과 ITAB의 동기화

![Untitled](./Untitled.png)

![Untitled](./Untitled%201.png)

![Untitled](./Untitled%202.png)

1. EVENT 발생

![Untitled](./Untitled%203.png)

1. PARAMETER 확인

![Untitled](./Untitled%204.png)

![Untitled](./Untitled%205.png)

![Untitled](./Untitled%206.png)

![Untitled](./Untitled%207.png)

1. CLASS 생성

![Untitled](./Untitled%208.png)

1. PERFORM 생성

![Untitled](./Untitled%209.png)

1. METHOD 로직 구현

![Untitled](./Untitled%2010.png)

1. 신호등(ITAB) → SCREEN

![Untitled](./Untitled%2011.png)

1. HANDLER 등록

![Untitled](./Untitled%2012.png)

1. 정합성 체크 실행

![Untitled](./Untitled%2013.png)

DATA CHANGED에서는 원래 데이터 정합성만 체크하고 DATA FINISHED에서 데이터가 변경되어야 함.

SCREEN과 ITAB 사이에 데이터 변경이 일어나는 순간에 DATA CHANGED가 발생하고, 데이터 정합성 체크 후에 DATA FINISHED가 발생함.

# DATA FINISHED

1. 데이터 변경

![Untitled](./Untitled%2014.png)

1. CLASS 생성

![Untitled](./Untitled%2015.png)

1. METHOD 구현

![Untitled](./Untitled%2016.png)

1. HANDLER 등록

![Untitled](./Untitled%2017.png)

# In-class practice

```abap
*&---------------------------------------------------------------------*
*& Report ZEDUR001_20221206
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZEDUR001_20221206 MESSAGE-ID ZMEDU15.

INCLUDE ZEDUR001_20221206_CLS.
INCLUDE ZEDUR001_20221206_TOP.
INCLUDE ZEDUR001_20221206_SCR.
INCLUDE ZEDUR001_20221206_F01.
INCLUDE ZEDUR001_20221206_PBO.
INCLUDE ZEDUR001_20221206_PAI.

START-OF-SELECTION.
PERFORM SELECT_DATA.

IF GT_STUDENT[] IS NOT INITIAL.
  CALL SCREEN 100.
ELSE.
  MESSAGE I000.
  EXIT.
ENDIF.
```

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221206_CLS
*&---------------------------------------------------------------------*

CLASS EVENT DEFINITION.
  PUBLIC SECTION.

  METHODS HANDLE_DATA_CHANGED FOR EVENT DATA_CHANGED
  OF CL_GUI_ALV_GRID
  IMPORTING ER_DATA_CHANGED E_ONF4 E_ONF4_BEFORE E_ONF4_AFTER E_UCOMM.

  METHODS HANDLE_DATA_FINISHED FOR EVENT DATA_CHANGED_FINISHED
  OF CL_GUI_ALV_GRID
  IMPORTING E_MODIFIED ET_GOOD_CELLS.
ENDCLASS.

CLASS EVENT IMPLEMENTATION.
  METHOD HANDLE_DATA_CHANGED.
    PERFORM ALV_HANDLE_DATA_CHANGED
    USING ER_DATA_CHANGED E_ONF4 E_ONF4_BEFORE E_ONF4_AFTER E_UCOMM.
  ENDMETHOD.

  METHOD HANDLE_DATA_FINISHED.
    PERFORM ALV_HANDLE_DATA_FINISHED
    USING E_MODIFIED ET_GOOD_CELLS.
  ENDMETHOD.

ENDCLASS.
```

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221206_TOP
*&---------------------------------------------------------------------*

DATA: BEGIN OF GS_STUDENT.
  INCLUDE TYPE ZSTU_15.
  DATA: ICON(4).
DATA: END OF GS_STUDENT.
DATA: GT_STUDENT LIKE TABLE OF GS_STUDENT.

DATA: OK_CODE LIKE SY-UCOMM.

DATA: GC_DOCKING TYPE REF TO CL_GUI_DOCKING_CONTAINER.
DATA: GC_GRID TYPE REF TO CL_GUI_ALV_GRID.

DATA: GS_FCAT TYPE LVC_S_FCAT.
DATA: GT_FCAT TYPE LVC_T_FCAT.

DATA: GS_LAYO TYPE LVC_S_LAYO.
DATA: GS_VARIANT TYPE DISVARIANT.

DATA: GS_SORT TYPE LVC_S_SORT.
DATA: GT_SORT TYPE LVC_T_SORT.

DATA: GO_EVENT TYPE REF TO EVENT.
```

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221206_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  ALV_HANDLE_DATA_CHANGED
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ER_DATA_CHANGED  text
*      -->P_E_ONF4  text
*      -->P_E_ONF4_BEFORE  text
*      -->P_E_ONF4_AFTER  text
*      -->P_E_UCOMM  text
*----------------------------------------------------------------------*
FORM ALV_HANDLE_DATA_CHANGED  USING    P_ER_DATA_CHANGED TYPE REF TO CL_ALV_CHANGED_DATA_PROTOCOL
                                       P_E_ONF4
                                       P_E_ONF4_BEFORE
                                       P_E_ONF4_AFTER
                                       P_E_UCOMM.

  DATA: LS_MODI TYPE LVC_S_MODI.

  LOOP AT P_ER_DATA_CHANGED->MT_GOOD_CELLS INTO LS_MODI.
    IF LS_MODI-FIELDNAME = 'ZTEL'.
      READ TABLE GT_STUDENT INTO GS_STUDENT INDEX LS_MODI-ROW_ID.

      IF LS_MODI-VALUE IS INITIAL.
        GS_STUDENT-ICON = ICON_LED_RED.
      ELSE.
        GS_STUDENT-ICON = ICON_LED_GREEN.
      ENDIF.

      MODIFY GT_STUDENT FROM GS_STUDENT INDEX LS_MODI-ROW_ID.
    ENDIF.
  ENDLOOP.

  PERFORM ALV_REFRESH.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_OBJECT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CREATE_OBJECT .
CREATE OBJECT GC_DOCKING
  EXPORTING
*    PARENT                      =
    REPID                       = SY-REPID
    DYNNR                       = SY-DYNNR
*    SIDE                        = DOCK_AT_LEFT
    EXTENSION                   = 5000
*    STYLE                       =
*    LIFETIME                    = lifetime_default
*    CAPTION                     =
*    METRIC                      = 0
*    RATIO                       =
*    NO_AUTODEF_PROGID_DYNNR     =
*    NAME                        =
*  EXCEPTIONS
*    CNTL_ERROR                  = 1
*    CNTL_SYSTEM_ERROR           = 2
*    CREATE_ERROR                = 3
*    LIFETIME_ERROR              = 4
*    LIFETIME_DYNPRO_DYNPRO_LINK = 5
*    others                      = 6
    .
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

CREATE OBJECT GC_GRID
  EXPORTING
*    I_SHELLSTYLE      = 0
*    I_LIFETIME        =
    I_PARENT          = GC_DOCKING
*    I_APPL_EVENTS     = space
*    I_PARENTDBG       =
*    I_APPLOGPARENT    =
*    I_GRAPHICSPARENT  =
*    I_NAME            =
*    I_FCAT_COMPLETE   = SPACE
*  EXCEPTIONS
*    ERROR_CNTL_CREATE = 1
*    ERROR_CNTL_INIT   = 2
*    ERROR_CNTL_LINK   = 3
*    ERROR_DP_CREATE   = 4
*    others            = 5
    .
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_FCAT .
  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'ICON'.
  GS_FCAT-COLTEXT = '신호등'.
  APPEND GS_FCAT TO GT_FCAT.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'NUM'.
  GS_FCAT-COLTEXT = '숫자'.
  APPEND GS_FCAT TO GT_FCAT.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'ZCODE'.
  GS_FCAT-COLTEXT = '학생코드'.
  APPEND GS_FCAT TO GT_FCAT.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'ZKNAME'.
  GS_FCAT-COLTEXT = '이름'.
  APPEND GS_FCAT TO GT_FCAT.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'ZENAME'.
  GS_FCAT-COLTEXT = '영문이름'.
  APPEND GS_FCAT TO GT_FCAT.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'ZGUBUN'.
  GS_FCAT-COLTEXT = '성별'.
  APPEND GS_FCAT TO GT_FCAT.

  CLEAR: GS_FCAT.
  GS_FCAT-FIELDNAME = 'ZTEL'.
  GS_FCAT-COLTEXT = '전화번호'.
  GS_FCAT-EDIT = 'X'.
  APPEND GS_FCAT TO GT_FCAT.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_LAYO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_LAYO .
  CLEAR: GS_LAYO.
  GS_LAYO-ZEBRA = 'X'.
  GS_LAYO-CWIDTH_OPT = 'X'.

  CLEAR: GS_VARIANT.
  GS_VARIANT-REPORT = 'SY-REPID'.
  GS_VARIANT-USERNAME = 'SY-UNAME'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_SORT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_SORT .

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ALV_EVENT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM ALV_EVENT .
  CALL METHOD GC_GRID->REGISTER_EDIT_EVENT
    EXPORTING
      I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED
*    EXCEPTIONS
*      ERROR      = 1
*      others     = 2
          .
  IF SY-SUBRC <> 0.
*   Implement suitable error handling here
  ENDIF.

  CREATE OBJECT GO_EVENT.

  SET HANDLER GO_EVENT->HANDLE_DATA_CHANGED FOR GC_GRID.
  SET HANDLER GO_EVENT->HANDLE_DATA_FINISHED FOR GC_GRID.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CALL_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CALL_ALV .
CALL METHOD GC_GRID->SET_TABLE_FOR_FIRST_DISPLAY
  EXPORTING
*    I_BUFFER_ACTIVE               =
*    I_BYPASSING_BUFFER            =
*    I_CONSISTENCY_CHECK           =
*    I_STRUCTURE_NAME              =
    IS_VARIANT                    = GS_VARIANT
    I_SAVE                        = 'X'
*    I_DEFAULT                     = 'X'
    IS_LAYOUT                     = GS_LAYO
*    IS_PRINT                      =
*    IT_SPECIAL_GROUPS             =
*    IT_TOOLBAR_EXCLUDING          =
*    IT_HYPERLINK                  =
*    IT_ALV_GRAPHICS               =
*    IT_EXCEPT_QINFO               =
*    IR_SALV_ADAPTER               =
  CHANGING
    IT_OUTTAB                     = GT_STUDENT
    IT_FIELDCATALOG               = GT_FCAT
    IT_SORT                       = GT_SORT
*    IT_FILTER                     =
*  EXCEPTIONS
*    INVALID_PARAMETER_COMBINATION = 1
*    PROGRAM_ERROR                 = 2
*    TOO_MANY_LINES                = 3
*    others                        = 4
        .
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ALV_REFRESH
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM ALV_REFRESH .

  DATA: LS_STABLE TYPE LVC_S_STBL.

  LS_STABLE-ROW = 'X'.
  LS_STABLE-COL = 'X'.

  CALL METHOD GC_GRID->REFRESH_TABLE_DISPLAY
    EXPORTING
      IS_STABLE      = LS_STABLE
*      I_SOFT_REFRESH =
*    EXCEPTIONS
*      FINISHED       = 1
*      others         = 2
          .
  IF SY-SUBRC <> 0.
*   Implement suitable error handling here
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SELECT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SELECT_DATA .
  SELECT * FROM ZSTU_15 INTO CORRESPONDING FIELDS OF TABLE GT_STUDENT.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ALV_HANDLE_DATA_FINISHED
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_E_MODIFIED  text
*      -->P_ET_GOOD_CELLS  text
*----------------------------------------------------------------------*
FORM ALV_HANDLE_DATA_FINISHED  USING    P_E_MODIFIED
                                        P_ET_GOOD_CELLS TYPE LVC_T_MODI.

  DATA: LS_MODI TYPE LVC_S_MODI.

  LOOP AT P_ET_GOOD_CELLS INTO LS_MODI.
    IF LS_MODI-FIELDNAME = 'ZTEL'.
      READ TABLE GT_STUDENT INTO GS_STUDENT INDEX LS_MODI-ROW_ID.

      IF GS_STUDENT-ICON NE ICON_LED_GREEN.
        CLEAR GS_STUDENT-ZTEL.
      ENDIF.
    ENDIF.

    MODIFY GT_STUDENT FROM GS_STUDENT INDEX LS_MODI-ROW_ID.
  ENDLOOP.

  PERFORM ALV_REFRESH.

ENDFORM.
```

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221206_PBO
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_0100 OUTPUT.
  SET PF-STATUS 'STATUS100'.
  SET TITLEBAR 'T100'.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  ALV_DISPLAY_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE ALV_DISPLAY_0100 OUTPUT.
  IF GC_DOCKING IS INITIAL.
    PERFORM CREATE_OBJECT.
    PERFORM SET_FCAT.
    PERFORM SET_LAYO.
    PERFORM SET_SORT.
    PERFORM ALV_EVENT.
    PERFORM CALL_ALV.
  ELSE.
    PERFORM ALV_REFRESH.
  ENDIF.
ENDMODULE.
```

```abap
*&---------------------------------------------------------------------*
*&  Include           ZEDUR001_20221206_PAI
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  USER_EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_EXIT INPUT.
  CASE OK_CODE.
    WHEN 'EXIT'.
      LEAVE PROGRAM.
    WHEN 'BACK' OR 'CANC'.
      LEAVE TO SCREEN 0.
  ENDCASE.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0100 INPUT.

ENDMODULE.
```

```abap
PROCESS BEFORE OUTPUT.
  MODULE STATUS_0100.
  MODULE ALV_DISPLAY_0100.
*
PROCESS AFTER INPUT.
  MODULE USER_EXIT AT EXIT-COMMAND.
  MODULE USER_COMMAND_0100.
```