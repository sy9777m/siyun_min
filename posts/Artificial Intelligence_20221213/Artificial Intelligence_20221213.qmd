---
title: "Artificial Intelligence 20221213"
author: "Siyun Min"
date: "2022-12-13"
categories: [SSU]
---
# 20221213

# 계획수립기 (planner)

주어진 문제에 대한 계획을 생성하는 알고리즘 또는 프로그램

## 계획수립의 형태

특정영역 계획수립기 (domain-specific planner)

영역독립 계획수립기 (domain-independent planner)

설정가능 계획수립기 (configurable planner)

## 특정영역 계획수립기 (domain-specific planner)

해당 영역에 특화된 계획수립 방법

다른 영역에 적용 불가

실제 많은 성공적인 사례

![Untitled](./Untitled.png)

## 영역독립 계획수립기 (domain-independent planner)

영역에 상관없이 적용할 수 있는 범용 계획수립기

실제 모든 가능한 영역에 적용될 수 있는 계획수립기 개발 곤란

- 적용영역 제한을 위한 가정
    - 고전적 계획수립 (classical planning)

계획수립 접근방법

- 상태공간 계획수립 (state-space planning)
- 계획공간 계획수립 (plan-space planning)

## 설정가능 계획수립기 (configurable planner)

특정영역 계획수립기에 비하여 영역독립 계획수립기는 매우 느림

영역독립 계획수립기를 사용하면서 해당 영역의 문제를 해결하는 방법에 관한 정보를 입력으로 사용

계층적 태스크 네트워크 (hierarchical task network, HTN) 계획수립

# 계회굿립 언어

계획수립 문제를 표현하는데 사용하는 언어

고전적 계획수립 문제를 표현하는 언어

- STRIPS, PDDL 등
- 리터럴로 표현되는 상태변수(state variable)가 중심
- 에이전트를 포함한 세계(world)의 상태는 상태변수에 값을 지정하여 표현
- 행동(action)에 대한 표현은 행동전후 상태변수 값의 변화 내용을 기술
- 상태변수들이 상태공간(state space)을 결정
    - 상태변수들의 개수가 늘어나면 상태공간의 크기는 기하급수적으로 증가

## STRIPS(STanford Research Institute Problem Solver)

미국의 SRI International의 Richard Fikes와 Nils Nilsson이 개발 (1971)

- 자동 계획생성기(planner)의 이름
- 계획수립 문제를 표현하는 언어의 이름

상태와 행동을 표현하기 위해 술어논리(first-order predicate logic) 사용

### 상태 (state)

변수와 함수를 포함하지 않은 긍정 리터럴(positive literal)들의 논리곱으로 표현

![Untitled](./Untitled%201.png)

### 목표 (goal)

리터럴들의 논리곱으로 표현

부정 리터럴 및 존재 한정사가 붙은 것으로 간주되는 변수 포함 가능

![Untitled](./Untitled%202.png)

### 행동 (action)

이름, 매개변수 목록, precondition (사전조건), effect (효과)로 구성

이름

- 어떤 일을 하는 것인지 기술

매개변수 목록

- precondition과 effect에 값을 전달하는 변수들

precondition (사전조건)

- 행동을 실행하기 전에 만족돼야 하는 조건 기술
- 함수를 사용하지 않는 리터럴의 논리곱으로 표현

effect (효과)

- 행동의 실행 후에 생기는 상태변화를 나타내는 것
- 함수를 사용하지 않는 리터럴들의 논리곱으로 표현
- 긍정 리터럴들은 행동 실행으로 새로 생기는 성질 표현 (add-list)
- 부정 리터럴들은 행동 실행으로 더 이상 만족되지 않는 성질 표현 (delete-list)

![Untitled](./Untitled%203.png)

## PDDL (Planning Domain Definition Language)

고전적 계획수립 문제의 표현 방법을 표준화하기 위해 Drew McDermott 등 (1988)이 개발한 언어

국제 계획수립 대회 (International Planning Competition, IPC; ipc.icaps-conference.org)의 표준언어로 사용, 계속 진화

문제 영역 세계에 있는 객체 (object), 객체의 성질에 대한 술어 (predicate), 초기 상태, 목표 상태, 행동을 기술

계획수립 문제를 두 개의 파일에 나누어 저장

- domain 파일 - 술어, 행동에 대한 정보 저장
- problem 파일 - 객체, 초기 상태, 목표 저장

![Untitled](./Untitled%204.png)

# 고전적 계획수립 방법

상태공간 계획수립 (state-space planning)

- 전향탐색
- 후향탐색
- STRIPS 알고리즘

계획공간 계획수립 (plan-space planning)

계획수립 그래프 방법 (planning graph method)

- GraphPlan 알고리즘

계층적 계획수립 (hierarchical planning)

- HTN 알고리즘

## 상태공간 계획수립 (state-space planning)

상태공간(state space) 상의 초기 상태에서 목표 상태로의 경로 탐색

- 노드 (node) - 세계 (world)의 상태
- 에지(edge) - 상태 전이 (transition)를 일으키는 행동 (action)

행동이 바로 적용할 수 있는 기본 행동 (primitive action)

- 연산자 (operator) = 기본행동

![Untitled](./Untitled%205.png)

# 전향탐색 (forward search)

초기 상태에서 시작

적용가능한 연산자를 목표 상태에 도달할 때까지 적용

다양한 알고리즘 적용 가능

- 너비 우선 탐색 (breadth-first search)
- 깊이 우선 탐색 (depth-first search)
- 휴리스틱 탐색 - A* 알고리즘

![Untitled](./Untitled%206.png)

# 후향탐색 (backward search)

목표 상태에서 시작

해당 상태를 만들어내는 행동 선택을 시작 상태에 도달할 때까지 반복

![Untitled](./Untitled%207.png)

# 계획공간 계획수립 (state-space planning)

탐색 공간이 부분계획(partial plan)들로 구성

- 부분적으로 값이 결정된 행동 (partially instantiated actions)의 집합
- 제약조건 (constraints)의 집합
    - 선행(precedence) 제약조건: $a \ll b$
    - 바인딩(binding) 제약조건
        - $\gg v_1 \neq v_2$ or $v \neq c$
        - $\gg v_1 = v_2$ or $v = c$
        - $\gg$ 대체 (substitution)
    - 인과연결 (casual link)
        - 행동 b에서 필요한 선행조건 p를 만족시키기 위해 행동 a 사용
        - $a \to b$

해답 계획(solution)이 완성될 때까지 점진적으로 개선(refinement)

![Untitled](./Untitled%208.png)

## 결함 (flaw)

부분계획에서 완전하지 못한 부분

### 미해결 목표 (open goal)

전제조건을 만족시키는 방법이 아직 결정되지 않은 행동

해결방법

- 미해결 목표보다 먼저 실행될 수 있으면서 미해결 목표의 전제조건을 만족시킬 수 있는 행동을 우선 찾음
- 찾아진 행동이 부분계획에 있으면 그것을 선택하고 미해결 목표의 전제 조건을 만족시키도록 변수의 값을 설정하거나 바인딩 제약조건을 추가함

![Untitled](./Untitled%209.png)

## 위협(threat)

삭제 조건 상호작용 (deleted-condition interaction)

행동 a가 행동 b의 사전조건 p를 생성하는 인과연결 (causal link) 관계

행동 c가 p를 삭제하는 effects 보유

c가 인과관계 $a \to b$를 위협하는 상황

![Untitled](./Untitled%2010.png)

# 계층적 계획수립

복잡한 태스크를 더 단순한 태스크로 분할

## 계층적 태스크 네트워크 (hierarchical task network, HTN) 방법

태스크(task)가 목표로 주어질 때, 이 태스크를 추상적 단계에서 분할하여 점차 구체적인 기본 작업들로 구성하여 계획을 수립하는 방법

### 주어지는 정보

기본 태스크 (primitive task) - 연산자(행동)에 의해 수행

복합 태스크 (non-primitive task)

- 메소드(method)를 사용하여 더 작은 부분 태스크(subtask)들로 분할하는 방법 표현
- 복합 태스크는 여러가지 방법으로 분할 가능
- 부분 태스크 수행에 제약조건(constraint) 존재 가능